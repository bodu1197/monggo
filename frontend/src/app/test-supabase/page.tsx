'use client';

import { useEffect, useState } from 'react';
import { supabase } from '@/utils/supabase';

export default function TestSupabasePage() {
  const [items, setItems] = useState<any[] | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    async function fetchItems() {
      try {
        const { data, error } = await supabase
          .from('test_items') // Assuming a table named 'test_items'
          .select('*');

        if (error) {
          throw error;
        }
        setItems(data);
      } catch (err: any) {
        setError(err.message);
      } finally {
        setLoading(false);
      }
    }

    fetchItems();
  }, []);

  if (loading) {
    return <div style={{ padding: '20px' }}>Supabase에서 데이터를 불러오는 중...</div>;
  }

  if (error) {
    return <div style={{ padding: '20px', color: 'red' }}>오류 발생: {error}</div>;
  }

  return (
    <div style={{ padding: '20px' }}>
      <h1>Supabase 연결 테스트 페이지</h1>
      {items && items.length > 0 ? (
        <div>
          <h2>불러온 데이터:</h2>
          <pre>{JSON.stringify(items, null, 2)}</pre>
        </div>
      ) : (
        <p>데이터가 없거나, 'test_items' 테이블이 비어 있습니다. Supabase에서 테이블을 생성하고 데이터를 추가해보세요.</p>
      )}
      <p>이 페이지를 보려면 Supabase 프로젝트에 'test_items'라는 테이블을 생성해야 합니다.</p>
      <p>예시 SQL:</p>
      <pre>
        {`CREATE TABLE public.test_items (
  id bigint GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name text NULL,
  created_at timestamp with time zone NULL DEFAULT now(),
  CONSTRAINT test_items_pkey PRIMARY KEY (id)
);`}
      </pre>
    </div>
  );
}