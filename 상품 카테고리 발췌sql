-- SQL commands for database schema and data initialization
-- This file consolidates all SQL-related work for easy management.

-- 1. Indonesian Administrative Divisions Schema (from create_tables.sql)
-- 34개 주(provinces) -> 500+개 시/군(regencies) -> 7,000+개 구(districts) -> 100,000+개 촌(villages)

-- 주(Province) 테이블
CREATE TABLE IF NOT EXISTS provinces (
    province_id INTEGER PRIMARY KEY, -- CSV에서 직접 ID 값 가져올 것
    province_name VARCHAR(100) NOT NULL UNIQUE,
    province_code CHAR(2) UNIQUE -- ISO 코드 (예: JK for Jakarta)
);

-- 시/군(Regency) 테이블
CREATE TABLE IF NOT EXISTS regencies (
    regency_id INTEGER PRIMARY KEY, -- CSV에서 직접 ID 값 가져올 것
    province_id INTEGER NOT NULL,
    regency_name VARCHAR(100) NOT NULL,
    regency_type VARCHAR(20),
    regency_code VARCHAR(10),

    FOREIGN KEY (province_id) REFERENCES provinces(province_id)
        ON DELETE CASCADE ON UPDATE CASCADE
);

-- 구(District) 테이블
CREATE TABLE IF NOT EXISTS districts (
    district_id INTEGER PRIMARY KEY, -- CSV에서 직접 ID 값 가져올 것
    regency_id INTEGER NOT NULL,
    district_name VARCHAR(100) NOT NULL,
    district_code VARCHAR(15),

    FOREIGN KEY (regency_id) REFERENCES regencies(regency_id)
        ON DELETE CASCADE ON UPDATE CASCADE
);

-- 촌/마을(Village) 테이블은 제외 (CSV 파일 없음)

-- 성능 최적화를 위한 인덱스 생성
CREATE INDEX IF NOT EXISTS idx_regency_province ON regencies(province_id);
CREATE INDEX IF NOT EXISTS idx_district_regency ON districts(regency_id);

-- 추가 검색용 인덱스
CREATE INDEX IF NOT EXISTS idx_province_name ON provinces(province_name);
CREATE INDEX IF NOT EXISTS idx_regency_name ON regencies(regency_name);
CREATE INDEX IF NOT EXISTS idx_district_name ON districts(district_name);

-- 계층 조회용 뷰 (자주 사용되는 조회 최적화)
CREATE OR REPLACE VIEW admin_hierarchy AS
SELECT
    p.province_id,
    p.province_name,
    r.regency_id,
    r.regency_name,
    r.regency_type,
    d.district_id,
    d.district_name
FROM provinces p
LEFT JOIN regencies r ON p.province_id = r.province_id
LEFT JOIN districts d ON r.regency_id = d.regency_id;

-- CSV 업로드 순서 (외래 키 관계 때문에 순서 중요!)
-- 1. provinces.csv 먼저 업로드
-- 2. regencies.csv 업로드
-- 3. districts.csv 업로드

-- Supabase에서 CSV 업로드하는 방법:
-- 1. Table Editor 열기
-- 2. "Insert" > "Import data from CSV" 선택
-- 3. CSV 파일 업로드 후 컬럼 매핑 확인
-- 4. "Import" 클릭

-- 주의사항:
-- - province_id, regency_id, district_id 값이 CSV에 포함되어 있어야 함
-- - 외래 키 관계 때문에 반드시 순서대로 업로드해야 함

-- 대용량 데이터 처리 최적화 설정 (10만개+ 촌 데이터용)
-- PostgreSQL에서는 별도 최적화 필요없음
-- Supabase에서 자동으로 최적화됨


-- 2. RLS Policies for public location data
ALTER TABLE public.provinces ENABLE ROW LEVEL SECURITY;
CREATE POLICY "Enable read access for all users" ON public.provinces FOR SELECT USING (true);

ALTER TABLE public.regencies ENABLE ROW LEVEL SECURITY;
CREATE POLICY "Enable read access for all users" ON public.regencies FOR SELECT USING (true);

ALTER TABLE public.districts ENABLE ROW LEVEL SECURITY;
CREATE POLICY "Enable read access for all users" ON public.districts FOR SELECT USING (true);


-- 3. Category Table Schema and Data (from new_updates.sql)
-- SQL commands for new database updates (e.g., creating new tables, altering existing ones)
-- Execute these commands in your Supabase SQL Editor when applying updates.

-- 1. Create the 'categories' table with hierarchical support if it doesn't exist
CREATE TABLE IF NOT EXISTS public.categories (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
  name TEXT NOT NULL,
  slug TEXT NOT NULL,
  parent_id BIGINT NULL, -- New column for hierarchical categories
  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW() NOT NULL,
  CONSTRAINT categories_pkey PRIMARY KEY (id),
  CONSTRAINT categories_name_key UNIQUE (name),
  CONSTRAINT categories_slug_key UNIQUE (slug),
  CONSTRAINT fk_parent_category FOREIGN KEY (parent_id) REFERENCES public.categories (id) ON DELETE CASCADE
);

-- Add RLS and policy if not already added
ALTER TABLE public.categories ENABLE ROW LEVEL SECURITY;

DROP POLICY IF EXISTS "Enable read access for all users" ON public.categories;
CREATE POLICY "Enable read access for all users" ON public.categories
  FOR SELECT USING (TRUE);

-- 2. Clear existing categories before inserting new ones
-- This ensures a clean slate and avoids conflicts with old data.
DELETE FROM public.categories;

-- 3. Insert new Indonesian categories
-- Using ON CONFLICT to prevent errors if you run the script multiple times.

-- Top-level categories
INSERT INTO public.categories (name, slug) VALUES
('Elektronik', 'elektronik'),
('Fashion', 'fashion'),
('Rumah & Taman', 'rumah-taman'),
('Mobil', 'mobil'),
('Motor', 'motor'),
('Properti', 'properti'),
('Jasa & Lowongan Kerja', 'jasa-lowongan-kerja'),
('Handphone & Gadget', 'handphone-gadget'),
('Hobi & Olahraga', 'hobi-olahraga'),
('Keperluan Pribadi', 'keperluan-pribadi'),
('Perlengkapan Bayi & Anak', 'perlengkapan-bayi-anak'),
('Kantor & Industri', 'kantor-industri'),
('Buku & Edukasi', 'buku-edukasi'),
('Olahraga', 'olahraga'),
('Barang Gratis', 'barang-gratis'),
('Lainnya', 'lainnya')
ON CONFLICT (slug) DO NOTHING;

-- Sub-categories
-- Elektronik
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Smartphone', 'smartphone', id FROM public.categories WHERE slug = 'elektronik' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Laptop & Komputer', 'laptop-komputer', id FROM public.categories WHERE slug = 'elektronik' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Tablet', 'tablet', id FROM public.categories WHERE slug = 'elektronik' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'TV & Audio', 'tv-audio', id FROM public.categories WHERE slug = 'elektronik' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Kamera & Fotografi', 'kamera-fotografi', id FROM public.categories WHERE slug = 'elektronik' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Gaming', 'gaming', id FROM public.categories WHERE slug = 'elektronik' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Aksesoris Elektronik', 'aksesoris-elektronik', id FROM public.categories WHERE slug = 'elektronik' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Peralatan Rumah', 'peralatan-rumah', id FROM public.categories WHERE slug = 'elektronik' ON CONFLICT (slug) DO NOTHING;

-- Fashion
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Pakaian Pria', 'pakaian-pria', id FROM public.categories WHERE slug = 'fashion' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Pakaian Wanita', 'pakaian-wanita', id FROM public.categories WHERE slug = 'fashion' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Sepatu Pria', 'sepatu-pria', id FROM public.categories WHERE slug = 'fashion' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Sepatu Wanita', 'sepatu-wanita', id FROM public.categories WHERE slug = 'fashion' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Tas & Dompet', 'tas-dompet', id FROM public.categories WHERE slug = 'fashion' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Aksesoris Fashion', 'aksesoris-fashion', id FROM public.categories WHERE slug = 'fashion' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Jam Tangan', 'jam-tangan', id FROM public.categories WHERE slug = 'fashion' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Kacamata', 'kacamata', id FROM public.categories WHERE slug = 'fashion' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Perhiasan', 'perhiasan', id FROM public.categories WHERE slug = 'fashion' ON CONFLICT (slug) DO NOTHING;

-- Rumah & Taman
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Makanan & Minuman', 'makanan-minuman', id FROM public.categories WHERE slug = 'rumah-taman' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Furniture & Dekorasi Rumah', 'furniture-dekorasi-rumah', id FROM public.categories WHERE slug = 'rumah-taman' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Kebutuhan Taman & Outdoor', 'kebutuhan-taman-outdoor', id FROM public.categories WHERE slug = 'rumah-taman' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Peralatan Bangunan & Material', 'peralatan-bangunan-material', id FROM public.categories WHERE slug = 'rumah-taman' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Perlengkapan Rumah & Dapur', 'perlengkapan-rumah-dapur', id FROM public.categories WHERE slug = 'rumah-taman' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Elektronik Rumah Tangga', 'elektronik-rumah-tangga', id FROM public.categories WHERE slug = 'rumah-taman' ON CONFLICT (slug) DO NOTHING;

-- Mobil
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Mobil Bekas', 'mobil-bekas', id FROM public.categories WHERE slug = 'mobil' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Aksesori Mobil', 'aksesori-mobil', id FROM public.categories WHERE slug = 'mobil' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Audio Mobil', 'audio-mobil', id FROM public.categories WHERE slug = 'mobil' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Spare Part Mobil', 'spare-part-mobil', id FROM public.categories WHERE slug = 'mobil' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Velg dan Ban', 'velg-dan-ban', id FROM public.categories WHERE slug = 'mobil' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Truk & Kendaraan Komersial', 'truk-kendaraan-komersial', id FROM public.categories WHERE slug = 'mobil' ON CONFLICT (slug) DO NOTHING;

-- Motor
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Motor Bekas', 'motor-bekas', id FROM public.categories WHERE slug = 'motor' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Aksesoris Motor', 'aksesoris-motor', id FROM public.categories WHERE slug = 'motor' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Helm', 'helm', id FROM public.categories WHERE slug = 'motor' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Spare Part Motor', 'spare-part-motor', id FROM public.categories WHERE slug = 'motor' ON CONFLICT (slug) DO NOTHING;

-- Properti
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Dijual: Rumah & Apartemen', 'dijual-rumah-apartemen', id FROM public.categories WHERE slug = 'properti' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Disewakan: Rumah & Apartemen', 'disewakan-rumah-apartemen', id FROM public.categories WHERE slug = 'properti' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Tanah', 'tanah', id FROM public.categories WHERE slug = 'properti' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Indekos', 'indekos', id FROM public.categories WHERE slug = 'properti' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Dijual: Bangunan Komersil', 'dijual-bangunan-komersil', id FROM public.categories WHERE slug = 'properti' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Disewakan: Bangunan Komersial', 'disewakan-bangunan-komersial', id FROM public.categories WHERE slug = 'properti' ON CONFLICT (slug) DO NOTHING;

-- Jasa & Lowongan Kerja
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Lowongan Kerja', 'lowongan-kerja', id FROM public.categories WHERE slug = 'jasa-lowongan-kerja' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Cari Pekerjaan', 'cari-pekerjaan', id FROM public.categories WHERE slug = 'jasa-lowongan-kerja' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Jasa', 'jasa', id FROM public.categories WHERE slug = 'jasa-lowongan-kerja' ON CONFLICT (slug) DO NOTHING;

-- Handphone & Gadget
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Handphone', 'handphone', id FROM public.categories WHERE slug = 'handphone-gadget' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Aksesoris Handphone & Tablet', 'aksesoris-handphone-tablet', id FROM public.categories WHERE slug = 'handphone-gadget' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Fotografi & Videografi', 'fotografi-videografi', id FROM public.categories WHERE slug = 'handphone-gadget' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Games & Console', 'games-console', id FROM public.categories WHERE slug = 'handphone-gadget' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Komputer & Laptop', 'komputer-laptop', id FROM public.categories WHERE slug = 'handphone-gadget' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Televisi, Audio & Aksesoris', 'televisi-audio-aksesoris', id FROM public.categories WHERE slug = 'handphone-gadget' ON CONFLICT (slug) DO NOTHING;

-- Hobi & Olahraga
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Alat Musik & Aksesoris', 'alat-musik-aksesoris', id FROM public.categories WHERE slug = 'hobi-olahraga' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Alat & Pakaian Olahraga', 'alat-pakaian-olahraga', id FROM public.categories WHERE slug = 'hobi-olahraga' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Sepeda, Skuter & Aksesoris', 'sepeda-skuter-aksesoris', id FROM public.categories WHERE slug = 'hobi-olahraga' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Kesenian & Handicraft', 'kesenian-handicraft', id FROM public.categories WHERE slug = 'hobi-olahraga' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Buku Cetak & Digital', 'buku-cetak-digital', id FROM public.categories WHERE slug = 'hobi-olahraga' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Koleksi & Mainan Hobi', 'koleksi-mainan-hobi', id FROM public.categories WHERE slug = 'hobi-olahraga' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Musik & Film', 'musik-film', id FROM public.categories WHERE slug = 'hobi-olahraga' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Hewan Peliharaan & Aksesoris', 'hewan-peliharaan-aksesoris', id FROM public.categories WHERE slug = 'hobi-olahraga' ON CONFLICT (slug) DO NOTHING;

-- Keperluan Pribadi
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Adat & Rohani', 'adat-rohani', id FROM public.categories WHERE slug = 'keperluan-pribadi' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Kesehatan, Perawatan & Kecantikan', 'kesehatan-perawatan-kecantikan', id FROM public.categories WHERE slug = 'keperluan-pribadi' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Tiket & Voucher', 'tiket-voucher', id FROM public.categories WHERE slug = 'keperluan-pribadi' ON CONFLICT (slug) DO NOTHING;

-- Perlengkapan Bayi & Anak
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Fashion Bayi & Anak', 'fashion-bayi-anak', id FROM public.categories WHERE slug = 'perlengkapan-bayi-anak' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Perlengkapan Ibu & Bayi', 'perlengkapan-ibu-bayi', id FROM public.categories WHERE slug = 'perlengkapan-bayi-anak' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Boneka & Mainan Anak', 'boneka-mainan-anak', id FROM public.categories WHERE slug = 'perlengkapan-bayi-anak' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Buku Anak-anak', 'buku-anak-anak', id FROM public.categories WHERE slug = 'perlengkapan-bayi-anak' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Stroller, Bouncer & Carrier', 'stroller-bouncer-carrier', id FROM public.categories WHERE slug = 'perlengkapan-bayi-anak' ON CONFLICT (slug) DO NOTHING;

-- Kantor & Industri
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Alat Keamanan & Keselamatan', 'alat-keamanan-keselamatan', id FROM public.categories WHERE slug = 'kantor-industri' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Peralatan Kantor & Stationery', 'peralatan-kantor-stationery', id FROM public.categories WHERE slug = 'kantor-industri' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Perlengkapan Usaha', 'perlengkapan-usaha', id FROM public.categories WHERE slug = 'kantor-industri' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Mesin & Keperluan Industri', 'mesin-keperluan-industri', id FROM public.categories WHERE slug = 'kantor-industri' ON CONFLICT (slug) DO NOTHING;

-- Buku & Edukasi
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Buku Pelajaran', 'buku-pelajaran', id FROM public.categories WHERE slug = 'buku-edukasi' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Novel & Fiksi', 'novel-fiksi', id FROM public.categories WHERE slug = 'buku-edukasi' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Buku Non-Fiksi', 'buku-non-fiksi', id FROM public.categories WHERE slug = 'buku-edukasi' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Komik & Manga', 'komik-manga', id FROM public.categories WHERE slug = 'buku-edukasi' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Buku Anak', 'buku-anak', id FROM public.categories WHERE slug = 'buku-edukasi' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Kamus & Ensiklopedia', 'kamus-ensiklopedia', id FROM public.categories WHERE slug = 'buku-edukasi' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Alat Tulis', 'alat-tulis', id FROM public.categories WHERE slug = 'buku-edukasi' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Perlengkapan Sekolah', 'perlengkapan-sekolah', id FROM public.categories WHERE slug = 'buku-edukasi' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Kursus & Tutorial', 'kursus-tutorial', id FROM public.categories WHERE slug = 'buku-edukasi' ON CONFLICT (slug) DO NOTHING;

-- Olahraga
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Fitness & Gym', 'fitness-gym', id FROM public.categories WHERE slug = 'olahraga' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Sepak Bola', 'sepak-bola', id FROM public.categories WHERE slug = 'olahraga' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Basket', 'basket', id FROM public.categories WHERE slug = 'olahraga' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Badminton', 'badminton', id FROM public.categories WHERE slug = 'olahraga' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Tenis', 'tenis', id FROM public.categories WHERE slug = 'olahraga' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Renang', 'renang', id FROM public.categories WHERE slug = 'olahraga' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Lari & Jogging', 'lari-jogging', id FROM public.categories WHERE slug = 'olahraga' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Bersepeda', 'bersepeda', id FROM public.categories WHERE slug = 'olahraga' ON CONFLICT (slug) DO NOTHING;
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Outdoor Sports', 'outdoor-sports', id FROM public.categories WHERE slug = 'olahraga' ON CONFLICT (slug) DO NOTHING;

-- Barang Gratis
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Barang Rumah Tangga', 'barang-rumah-tangga', id FROM public.categories WHERE slug = 'barang-gratis' ON CONFLICT (slug) DO NOTHING;

-- Lainnya
INSERT INTO public.categories (name, slug, parent_id) SELECT 'Hewan Peliharaan', 'hewan-peliharaan', id FROM public.categories WHERE slug = 'lainnya' ON CONFLICT (slug) DO NOTHING;


-- 4. User Management Schema
-- SQL commands for user management

-- Note: This schema is for a custom user management system using next-auth's CredentialsProvider.
-- It does NOT integrate with Supabase's built-in authentication.
-- As a result, Row Level Security (RLS) policies cannot rely on `auth.uid()`.
-- Authorization logic (e.g., ensuring users can only access their own data)
-- MUST be implemented within the Next.js API routes by validating the user's session token.

-- 1. Create the 'users' table if it doesn't exist
CREATE TABLE IF NOT EXISTS public.users (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    email TEXT NOT NULL,
    password TEXT NOT NULL,
    name TEXT,
    role TEXT NOT NULL DEFAULT 'user',
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW() NOT NULL,
    CONSTRAINT users_pkey PRIMARY KEY (id),
    CONSTRAINT users_email_key UNIQUE (email)
);

-- 2. Add comments for clarity
COMMENT ON TABLE public.users IS 'Stores user account information for custom authentication.';
COMMENT ON COLUMN public.users.email IS 'User''s unique email address.';
COMMENT ON COLUMN public.users.password IS 'Hashed password for the user.';
COMMENT ON COLUMN public.users.role IS 'User role for authorization (e.g., admin, user).';

-- 3. Enable Row Level Security (RLS)
ALTER TABLE public.users ENABLE ROW LEVEL SECURITY;

-- 4. Create RLS policies
-- Drop existing policies to ensure the script is re-runnable
DROP POLICY IF EXISTS "Enable insert for anyone" ON public.users;
DROP POLICY IF EXISTS "Enable read access for authenticated users" ON public.users; -- Also drop the old incorrect policy
DROP POLICY IF EXISTS "Enable read access for all users" ON public.users;

-- This policy allows public insert access for signup.
CREATE POLICY "Enable insert for anyone" ON public.users
  FOR INSERT
  WITH CHECK (true);

-- This policy allows read access to everyone, which is necessary for the signup email check.
CREATE POLICY "Enable read access for all users" ON public.users
  FOR SELECT
  USING (true);

-- NOTE: Update and Delete policies are intentionally omitted for security.
-- These actions should be handled by specific, secure API endpoints
-- that validate the user's identity and permissions based on the session token.